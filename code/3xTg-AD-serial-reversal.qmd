---
title: "Serial Reversal in 3xTg-AD Mice"
author:
  - name: Kyle M Roddick
    affiliations:
      - ref: dal
  - name: Heather M Schellinck
    affiliations:
      - ref: dal
  - name: Richard E Brown
    affiliations:
      - ref: dal
    attributes:
      corresponding: true
affiliations:
  - id: dal
    name: Dalhousie University
    deparment: Psychology and Neuroscience, 

execute:
  echo: false
  warning: false
format:
    pdf:
        include-in-header: 
            text: |
                \usepackage{fancyhdr}
                \usepackage[margin=1in]{geometry}
                \setmainfont{Times New Roman}
                
        include-before-body:
            text: |
                \pagestyle{fancy}
                \fancyhead[L]{Serial Reversal in 3xTg-AD Mice}
                \fancyhead[R]{\today}
                \fancyfoot[C]{\thepage}
        toc: false
template-partials:
  - title.tex
---

```{r}
#### Load libraries ----------------------------------------------------
library(here)
library(janitor)
library(rstatix)
library(tidyverse)
library(MuMIn)
    # options(na.action = "na.fail")
library(lme4)
library(knitr)
    options(knitr.kable.NA = '')
library(kableExtra)
library(lubridate)
    
source(here("code", "format_p_values.R"))

#### Read and wrangle data ---------------------------------------------

# Genotypes data

geno <- read_csv(here("data", "geno clean.csv"),
                 col_types = "cffDDdd") %>% 
    mutate(sex = case_when(
            sex == "f" ~ "Female",
            sex == "m" ~ "Male"),
        sex = as.factor(sex),
        geno = case_when(
            geno == "tg" ~ "3xTg-AD",
            geno == "wt" ~ "B6129"),
        geno = as.factor(geno),
        end = mdy(end),
        retest_date = mdy(retest_date),
        retest_days = as.numeric(retest_date - end)) %>% 
    clean_names()

# Manual data

manual_files <- list.files(here("data", "csvs"),
                           pattern = "\\.csv",
                           full.names = TRUE)

manual_data <- manual_files %>% 
    map_dfr(read_csv,
            col_types = "cccdddddl") %>% 
    clean_names() %>% 
    filter(!exclude) %>% 
    mutate(rev = rev == "yes",
           retest = str_to_lower(op) == "retest") %>% 
    rename(animal = mouse) %>% 
    select(-exclude)

# Auto data

auto_files <- list.files(here("data", "auto"),
                         pattern = "\\.csv",
                         full.names = TRUE)

auto_data <- auto_files %>% 
    map_dfr(read_csv,
            col_types = "ccddccdddddccdddddccldlld",
            comment = "#") %>% 
    clean_names() %>% 
    mutate(animal = case_when(
            animal == "1297" ~ "1927",
            TRUE ~ animal),
           op = str_extract(study_name,
                            "[:digit:]+"),
           rev = str_detect(study_name,
                            "REV"),
           retest = str_detect(study_name,
                               "RETEST")) %>% 
    group_by(animal, date, study_name, block, op, rev, retest) %>% 
    summarise(hit = sum(correct[trial_type == "P"], na.rm = TRUE),
              p_trials = sum(trial_type[!ss] == "P"),
              cr = sum(correct[trial_type == "N"], na.rm = TRUE),
              n_trials = sum(trial_type[!ss] == "N")) %>% 
    ungroup() %>% 
    select(-date, -study_name)

# Combine manual and auto data, summarize and add genotypes

dat <- bind_rows(manual_data, auto_data) %>% 
    group_by(animal, op, rev, retest) %>% 
    summarise(across(hit:n_trials,
                     ~ sum(.x))) %>% 
    mutate(errors = (p_trials + n_trials) - (hit + cr),
           op = case_when(
               op %in% 0:18 ~ as.numeric(op)
           ),
           op_n = op,
           rev = as.factor(rev),
           retest = as.factor(retest),
           op = as.factor(op)) %>% 
    left_join(geno,
              by = c("animal" = "mouse")) %>% 
    ungroup()

```

```{r}
#### Check for incomplete data ------------------------------------
incomplete_mice <- dat %>% 
    group_by(animal, rev, retest) %>% 
    summarise(max_op = max(op_n),
              min_op = min(op_n)) %>% 
    filter(max_op != 18, retest == FALSE) %>% 
    pull(animal) %>% 
    unique()

# Drop mice with incomplete data mice
dat <- dat %>% 
    filter(!(animal %in% incomplete_mice))
```

# Subjects

```{r}
#| label: tbl-subjects
#| tbl-cap: "Demographics of mice tested."

#### Demographics ---------------------------------------------
geno %>% 
    filter(!(mouse %in% incomplete_mice)) %>% 
    group_by(geno, sex) %>% 
    summarise(mean_age = mean(days),
              min_age = min(days),
              max_age = max(days),
              n = length(days)) %>% 
    kbl(format = "latex",
        col.names = c("Genotype", "Sex", "Mean age (days)",
                        "Minimum age (days)", "Maximum age (days)", "N"),
        digits = 2,
        booktabs = TRUE,
        linesep = "")

t_test_age <- geno %>% 
    filter(!(mouse %in% incomplete_mice)) %>%
    ungroup() %>% 
    t_test(days ~ geno)

```

Due to the small number of male mice, sexes are lumped together in this analysis.
There are `r dat %>% pull(animal) %>% unique() %>% length()` mice included in this study. 
There was no significant difference in age between the 3xTg-AD and B6129 mice (*t*~`r format(t_test_age$df, digits = 2)`~ = `r format(t_test_age$statistic, digits = 2)`, *p* `r format.p(t_test_age$p)`; @tbl-subjects).

# Training

```{r}
#| label: fig-training-errors
#| fig-cap: "Errors madeduring training."

training_dat <- dat %>% 
    filter(op == 0)

training_t_test <- training_dat %>% 
    ungroup() %>% 
    t_test(errors ~ geno)

training_summary <- training_dat %>% 
    group_by(geno) %>% 
    summarise(errors_mean = mean(errors),
              errors_sd = sd(errors))

training_dat %>% 
    ggplot(aes(x = geno,
               y = errors,
               fill = geno)) +
    geom_boxplot(outlier.shape = NA) +
    geom_dotplot(binaxis = "y", 
               stackdir = "center",
               fill = NA) +
    theme_classic() +
    theme(legend.position = "none") +
    labs(y = "Training errors",
         x = "Genotype")
```

A t-test was used to compare the number of errors made during training.
The B6129 mice (`r format(training_summary$errors_mean[2], digits = 2)` ± `r format(training_summary$errors_sd[2], digits = 2)`) made more errors than the 3xTg-AD mice (`r format(training_summary$errors_mean[2], digits = 2)` ± `r format(training_summary$errors_sd[2], digits = 2)`; *t*~`r format(training_t_test$df, digits = 2)`~ = `r format(training_t_test$statistic, digits = 2)`, *p* `r format.p(training_t_test$p)`, @fig-training-errors).


# Difference scores

```{r}
#| label: fig-overall
#| fig-cap: "Errors (±95% CI) made by the mice at on each odour pair."

overall_dat <- dat %>% 
    filter(retest == FALSE,
           op_n > 0) %>% 
    pivot_wider(id_cols = c(animal, op, op_n, geno),
                names_from = rev,
                values_from = errors) %>% 
    select(animal,
           op,
           op_n,
           geno,
           disc = `FALSE`,
           rev = `TRUE`)

overall_dat %>% 
    ggplot(aes(y = disc,
               x = op_n,
               colour = geno)) +
    stat_summary(fun.data = "mean_cl_boot") +
    stat_summary(aes(y = rev,
                     x = op_n + .33),
                 shape = 1,
                 fun.data = "mean_cl_boot") +
    geom_segment(data = overall_dat %>% 
                     group_by(op, geno) %>% 
                     summarise(x = mean(op_n),
                               y = mean(disc, na.rm = TRUE),
                               xend = mean(op_n) + .33,
                               yend = mean(rev, na.rm = TRUE)),
                 aes(x = x, y = y, xend = xend, yend = yend),
                 colour = "black") +
    facet_grid(rows = vars(geno)) +
    theme_bw() +
    theme(panel.grid = element_blank(),
          legend.position = "none") +
    labs(x = "Odour pair",
         y = "Errors")
    
```

```{r}
overall_diffs <- overall_dat %>% 
    mutate(diff_score = rev - disc,
           diff_pro = rev / disc)

overall_diffs_summary <- overall_diffs %>% 
    group_by(op, geno) %>% 
    summarise(across(starts_with("diff"),
                     .fns = list(mean = ~ mean(.x, na.rm = TRUE),
                                 sd = ~ sd(.x, na.rm = TRUE)),
                     .names = "{.col}_{.fn}"))

first_third_aov <- overall_diffs %>% 
    filter(op_n < 7,
           !is.na(diff_score)) %>% 
    ungroup() %>% 
    anova_test(dv = diff_score,
               between = geno,
               wid = animal,
               within = op) %>% 
    get_anova_table()

first_third_ph <- overall_diffs %>% 
    filter(op_n < 7,
           !is.na(diff_score)) %>% 
    group_by(op) %>% 
    tukey_hsd(diff_score ~ geno)

second_third_aov <- overall_diffs %>% 
    filter(op_n >= 7,
           op_n < 13,
           !is.na(diff_score)) %>% 
    ungroup() %>% 
    anova_test(dv = diff_score,
               between = geno,
               wid = animal,
               within = op) %>% 
    get_anova_table()

last_third_aov <- overall_diffs %>% 
    filter(op_n > 12,
           !is.na(diff_score)) %>% 
    ungroup() %>% 
    anova_test(dv = diff_score,
               between = geno,
               wid = animal,
               within = op) %>% 
    get_anova_table()
```

The sequence of odour pairs was divided into thirds, and ANOVAs examining the differences between the errors on the discrimination trials and the reversal trials were run on each third.
Greenhouse-Geisser corrections were applied when Mauchly's test for sphericity detected that within-subjects factors violated sphericity.

In the first third of odour pairs, there were significant effects of genotype (*F*~(`r format(first_third_aov$DFn[1], digits = 2)`,`r format(first_third_aov$DFd[1], digits = 2)`)~ = `r format(first_third_aov$F[1], digits = 2)`, *p* `r format.p(first_third_aov$p[1], digits = 2)`, , $\eta^2_G$ = `r format(first_third_aov$ges[1], digits = 2)`) and odour pair (*F*~(`r format(first_third_aov$DFn[2], digits = 2)`,`r format(first_third_aov$DFd[2], digits = 2)`)~ = `r format(first_third_aov$F[2], digits = 2)`, *p* `r format.p(first_third_aov$p[2], digits = 2)`, $\eta^2_G$ = `r format(first_third_aov$ges[2], digits = 2)`; @fig-overall).
There was no significant interaction (*F*~(`r format(first_third_aov$DFn[3], digits = 2)`,`r format(first_third_aov$DFd[3], digits = 2)`)~ = `r format(first_third_aov$F[3], digits = 2)`, *p* `r format.p(first_third_aov$p[3], digits = 2)`, $\eta^2_G$ = `r format(first_third_aov$ges[3], digits = 2)`)).
Post-hoc Tukey HSD tests found that there was a significant difference between the B6129 and 3xTg-AD mice on the second odour pair (*p* `r format.p(first_third_ph$p.adj[2])`).

On the second and last thirds there were no significant effects (*p*'s >= `r format(min(c(second_third_aov$p, last_third_aov$p)), digits = 2)`).


# Discrimination

```{r}
#| label: fig-disc
#| fig-cap: "Errors (±95% CI) made by the mice at on each odour pair during the discrimination stages."

disc_dat <- dat %>% 
    filter(retest == FALSE, 
           rev == FALSE,
           op_n > 0)

disc_dat %>% 
    ggplot(aes(x = op_n,
               y = errors,
               colour = geno)) +
    # geom_point(alpha = .2,
    #            shape = 20) + 
    stat_summary(fun.data = "mean_cl_boot") +
    geom_smooth(se = FALSE) +
    theme_classic() +
    theme(legend.title = element_blank(),
          legend.position = c(.9, .9)) +
    labs(x = "Odour pair",
         y = "Errors")
    
```

```{r}
#| label: tbl-disc-models
#| tbl-cap: "AICc model table for discrimination."

#### Tests -------------------------------------------------------

# Discrimination

# disc_fm <- lmer(errors ~ op * geno + (1|animal),
#                 data = disc_dat,
#                 REML = FALSE)
# 
# disc_model_table <- dredge(disc_fm)
# 
# disc_best_model <- get.models(disc_model_table,
#                               subset = delta == 0)[[1]]
# 
# disc_null_model <- lmer(errors ~ (1|animal),
#                         data = disc_dat,
#                         REML = FALSE)
# 
# disc_aov <- anova(disc_best_model, disc_null_model) %>% tidy()
# 
# attr(disc_model_table$weight, 'model.weights') <- NULL
# 
# disc_model_table %>% 
#     mutate(weight = round(weight, 2)) %>% 
#     select(-`(Intercept)`) %>% 
#     kable(digits = 2,
#           row.names = FALSE,
#           booktabs = TRUE,
#           linesep = "")
#     # kable_styling(latex_options = c("scale_down"))
```

```{r}
disc_first_third_aov <- disc_dat %>% 
    filter(op_n < 7) %>% 
    ungroup() %>% 
    anova_test(dv = errors,
               between = geno,
               wid = animal,
               within = op) %>% 
    get_anova_table()

disc_first_third_ph <- disc_dat %>% 
    filter(op_n < 7) %>% 
    ungroup() %>%
    tukey_hsd(errors ~ as.factor(op))

disc_second_third_aov <- disc_dat %>% 
    filter(op_n >= 7,
           op_n < 13) %>% 
    ungroup() %>% 
    anova_test(dv = errors,
               between = geno,
               wid = animal,
               within = op) %>% 
    get_anova_table()

disc_last_third_aov <- disc_dat %>% 
    filter(op_n >= 13) %>% 
    ungroup() %>% 
    anova_test(dv = errors,
               between = geno,
               wid = animal,
               within = op) %>% 
    get_anova_table()
```

The sequence of odour pairs was divided into thirds, and ANOVAs examining the  the errors on the discrimination trials were run on each third (@fig-disc).
Greenhouse-Geisser corrections were applied when Mauchly's test for sphericity detected that within-subjects factors violated sphericity.

In the first third of trials there was a significant effect of odour pair (*F*~(`r format(disc_first_third_aov$DFn[2], digits = 2)`,`r format(disc_first_third_aov$DFd[2], digits = 2)`)~ = `r format(disc_first_third_aov$F[2], digits = 2)`, *p* `r format.p(disc_first_third_aov$p[2], digits = 2)`, $\eta^2_G$ = `r format(disc_first_third_aov$ges[2], digits = 2)`), 
but no effect of genotype (*F*~(`r format(disc_first_third_aov$DFn[1], digits = 2)`,`r format(disc_first_third_aov$DFd[1], digits = 2)`)~ = `r format(disc_first_third_aov$F[1], digits = 2)`, *p* `r format.p(disc_first_third_aov$p[1], digits = 2)`, $\eta^2_G$ = `r format(disc_first_third_aov$ges[1], digits = 2)`), 
nor an interaction (*F*~(`r format(disc_first_third_aov$DFn[3], digits = 2)`,`r format(disc_first_third_aov$DFd[3], digits = 2)`)~ = `r format(disc_first_third_aov$F[3], digits = 2)`, *p* `r format.p(disc_first_third_aov$p[3], digits = 2)`, $\eta^2_G$ = `r format(disc_first_third_aov$ges[3], digits = 2)`).

There were no significant effects in the second or last thirds of trials (*p*'s >= `r format(min(c(disc_second_third_aov$p,disc_last_third_aov$p), digits = 2))`).

<!-- In the last third of trials there was a significant effect of odour pair (*F*~(`r format(disc_last_third_aov$DFn[2], digits = 2)`,`r format(disc_last_third_aov$DFd[2], digits = 2)`)~ = `r format(disc_last_third_aov$F[2], digits = 2)`, *p* `r format.p(disc_last_third_aov$p[2], digits = 2)`, $\eta^2_G$ = `r format(disc_last_third_aov$ges[2], digits = 2)`),  -->
<!-- but no effect of genotype (*F*~(`r format(disc_last_third_aov$DFn[1], digits = 2)`,`r format(disc_last_third_aov$DFd[1], digits = 2)`)~ = `r format(disc_last_third_aov$F[1], digits = 2)`, *p* `r format.p(disc_last_third_aov$p[1], digits = 2)`, $\eta^2_G$ = `r format(disc_last_third_aov$ges[1], digits = 2)`),  -->
<!-- nor an interaction (*F*~(`r format(disc_last_third_aov$DFn[3], digits = 2)`,`r format(disc_last_third_aov$DFd[3], digits = 2)`)~ = `r format(disc_last_third_aov$F[3], digits = 2)`, *p* `r format.p(disc_last_third_aov$p[3], digits = 2)`, $\eta^2_G$ = `r format(disc_last_third_aov$ges[3], digits = 2)`). -->

## Near errorless learning

```{r}
#| label: fig-disc-errorless
#| fig-cap: "Number of mice showing errorless learning on each odour pair during discrimination."

disc_1_error <- disc_dat %>% 
    filter(errors == 1)

disc_0_error <- disc_dat %>% 
    filter(errors == 0)

disc_error <- disc_dat %>% 
    filter(errors <= 1)

disc_errorless_table <- disc_error %>% 
    pull(animal) %>% 
    table()

disc_best_mouse <- disc_errorless_table %>% 
    which.max() %>% 
    attr("names")

disc_best_geno <- geno$geno[geno$mouse == disc_best_mouse]

disc_errorless_dat <- disc_dat %>% 
    mutate(errorless = errors <= 1)

disc_errorless_dat %>% 
    filter(errorless) %>% 
    group_by(geno, op, op_n) %>% 
    count() %>%
    ungroup() %>% 
    complete(geno = levels(dat$geno),
             op_n = 1:18,
             fill = list(n = 0)) %>% 
    ggplot(aes(x = op_n,
               y = n,
               colour = geno)) +
    geom_point(position = position_dodge(width = .33)) +
    theme_classic() +
    labs(x = "Odour pair",
         y = "Number of mice with 0 or 1 errors")  +
    theme(legend.title = element_blank(),
          legend.position = c(.1, .9))
```

```{r}
disc_errorless_chi_op <- tabyl(disc_errorless_dat, op_n, errorless) %>%
    chisq.test()

disc_errorless_chi_geno <- tabyl(disc_errorless_dat, geno, errorless) %>%
    chisq.test()
```

```{r}
#| label: tbl-disc-errorless-models
#| tbl-cap: "AICc model table for near errorless learning during discrimination."

# disc_errorless_mf <- glmer(errorless ~ geno + (1|animal),
#                            data = disc_errorless_dat,
#                            family = "binomial")
# 
# disc_errorless_model_table <- dredge(disc_errorless_mf)
# 
# disc_errorless_best_model <- get.models(disc_errorless_model_table,
#                                         subset = delta == 0)[[1]]
# 
# disc_errorless_null_model <- glmer(errorless ~ 1 + (1|animal),
#                                    data = disc_errorless_dat,
#                                    family = "binomial")
# 
# disc_errorless_aov <- anova(disc_errorless_best_model, 
#                             disc_errorless_null_model) %>% 
#     tidy()
# 
# attr(disc_errorless_model_table$weight, 'model.weights') <- NULL
# 
# disc_errorless_model_table %>% 
#     mutate(weight = round(weight, 2)) %>% 
#     select(-`(Intercept)`) %>% 
#     kable(digits = 2,
#           row.names = FALSE,
#           booktabs = TRUE,
#           linesep = "")

```

```{r}
# disc_second_half <- disc_dat %>% 
#     filter(op >= 10) %>% 
#     group_by(geno) %>% 
#     summarise(errors_mean = mean(errors),
#               errors_sd = sd(errors))
# 
# disc_second_half_t_test <- disc_dat %>%
#     filter(op >= 10) %>%
#     ungroup() %>%
#     t_test(errors ~ geno)
```

There were `r disc_1_error %>% nrow()` instances of mice making a single error on the initial discrimination of the odour pair, and `r disc_0_error %>% nrow()` instance of a mouse making zero errors (@fig-disc-errorless). 
With `r disc_errorless_table %>% length()` mice passing at least one discrimination with just one or zero errors.
One mouse, a `r disc_best_geno`, had one or fewer errors on the initial discrimination of `r disc_errorless_table %>% max()` odour pairs.

Pearson's $\chi^2$ tests with Yate's continuity corrections were run on the number of mice showing errorless learning. 
The $\chi^2$ on the effect of odour pair was significant ($\chi^2$~`r format(disc_errorless_chi_op$parameter, digits = 2)`~ = `r format(disc_errorless_chi_op$statistic, digits = 2)`, *p* `r format.p(disc_errorless_chi_op$p.value)`),
while the $\chi^2$ on the effect of genotype was not ($\chi^2$~`r format(disc_errorless_chi_geno$parameter, digits = 2)`~ = `r format(disc_errorless_chi_geno$statistic, digits = 2)`, *p* `r format.p(disc_errorless_chi_geno$p.value)`).

## Age effects

```{r}
#| label: fig-disc-corr
#| fig-cap: "Correlation between age and errors made on odour pair one discrimination."

disc_corr_test <- disc_dat %>% 
    filter(op == 1) %>% 
    group_by(geno) %>% 
    cor_test(errors, days)

disc_dat %>% 
    filter(op == 1) %>% 
    ggplot(aes(x = days,
               y = errors,
               colour = geno)) +
    geom_point() +
    geom_smooth(method = "lm") + 
    theme_classic() +
    theme(legend.title = element_blank()) +
    labs(x = "Age (days)",
         y = "Errors")
```

Pearson's correlations were used to compare the number of errors made on odour pair one to the age of the mice for each genotype (@fig-disc-corr). 
The correlations were not significant for either the B6129 (*r* = `r format(disc_corr_test$cor[2], digits = 2)`, *p* `r format.p(disc_corr_test$p[2])`), 
nor the 3xTg-AD (*r* = `r format(disc_corr_test$cor[1], digits = 2)`, *p* `r format.p(disc_corr_test$p[1])`) mice.
{{< pagebreak >}}
# Reversal

```{r}
#| label: fig-rev
#| fig-cap: "Errors (±95% CI) made by the mice at on each odour pair during the reversal stages."

rev_dat <- dat %>% 
    filter(retest == FALSE, 
           rev == TRUE)

rev_dat %>% 
    ggplot(aes(x = op_n,
               y = errors,
               colour = geno)) +
    # geom_point(alpha = .2,
    #            shape = 20) + 
    stat_summary(fun.data = "mean_cl_boot") +
    geom_smooth(se = FALSE) +
    theme_classic() +
    theme(legend.title = element_blank(),
          legend.position = c(.9, .9)) +
    labs(x = "Odour pair",
         y = "Errors")
```


```{r}
#| label: tbl-rev-models
#| tbl-cap: "AICc model table for reversal."

# Reversal
# rev_fm <- lmer(errors ~ op * geno + (1|animal),
#                data = rev_dat,
#                REML = FALSE)
# 
# rev_model_table <- dredge(rev_fm)
# 
# rev_best_model <- get.models(rev_model_table,
#                              subset = delta == 0)[[1]]
# 
# rev_null_model <- lmer(errors ~ (1|animal),
#                        data = rev_dat,
#                        REML = FALSE)
# 
# rev_aov <- anova(rev_best_model, rev_null_model) %>% tidy()
# 
# attr(rev_model_table$weight, 'model.weights') <- NULL
# 
# rev_model_table %>% 
#     mutate(weight = round(weight, 2)) %>% 
#     select(-`(Intercept)`) %>% 
#     kable(digits = 2,
#           row.names = FALSE,
#           booktabs = TRUE,
#           linesep = "") 
    # kable_styling(latex_options = c("scale_down"))
```

```{r}

rev_first_third_aov <- rev_dat %>% 
    filter(op_n < 7) %>% 
    ungroup() %>% 
    anova_test(dv = errors,
               between = geno,
               wid = animal,
               within = op) %>% 
    get_anova_table()

rev_first_third_ph <- rev_dat %>% 
    filter(op_n < 7) %>% 
    group_by(op) %>%
    tukey_hsd(errors ~ geno)

rev_second_third_aov <- rev_dat %>% 
    filter(op_n >= 7,
           op_n < 13) %>% 
    ungroup() %>% 
    anova_test(dv = errors,
               between = geno,
               wid = animal,
               within = op) %>% 
    get_anova_table()

rev_last_third_aov <- rev_dat %>% 
    filter(op_n >= 13) %>% 
    ungroup() %>% 
    anova_test(dv = errors,
               between = geno,
               wid = animal,
               within = op) %>% 
    get_anova_table()

rev_last_third_ph <- rev_dat %>% 
    filter(op_n >= 13) %>% 
    group_by(op) %>%
    tukey_hsd(errors ~ geno)
```

The sequence of odour pairs was divided into thirds, and ANOVAs examining the  the errors on the reversal trials were run on each third (@fig-rev).
Greenhouse-Geisser corrections were applied when Mauchly's test for sphericity detected that within-subjects factors violated sphericity.

In the first third of trials there were significant effects of odour pair (*F*~(`r format(rev_first_third_aov$DFn[2], digits = 2)`,`r format(rev_first_third_aov$DFd[2], digits = 2)`)~ = `r format(rev_first_third_aov$F[2], digits = 2)`, *p* `r format.p(rev_first_third_aov$p[2], digits = 2)`, $\eta^2_G$ = `r format(rev_first_third_aov$ges[2], digits = 2)`), 
and of genotype (*F*~(`r format(rev_first_third_aov$DFn[1], digits = 2)`,`r format(rev_first_third_aov$DFd[1], digits = 2)`)~ = `r format(rev_first_third_aov$F[1], digits = 2)`, *p* `r format.p(rev_first_third_aov$p[1], digits = 2)`, $\eta^2_G$ = `r format(rev_first_third_aov$ges[1], digits = 2)`), 
but no interaction (*F*~(`r format(rev_first_third_aov$DFn[3], digits = 2)`,`r format(rev_first_third_aov$DFd[3], digits = 2)`)~ = `r format(rev_first_third_aov$F[3], digits = 2)`, *p* `r format.p(rev_first_third_aov$p[3], digits = 2)`, $\eta^2_G$ = `r format(rev_first_third_aov$ges[3], digits = 2)`).

Post hoc Tukey HSD tests found that there were significant genotype differences on odour pairs two (adjusted *p* `r format.p(rev_first_third_ph$p.adj[2])`) and six (adjusted *p* `r format.p(rev_first_third_ph$p.adj[6])`).

There were no significant effects in the second or last thirds of trials (*p*'s >= `r format(min(c(rev_second_third_aov$p,rev_last_third_aov$p), digits = 2))`).

## Near errorless learning

```{r}
#| label: fig-rev-errorless
#| fig-cap: "Number of mice showing errorless learning on each odour pair during reversal"

rev_1_error <- rev_dat %>% 
    filter(errors == 1)

rev_0_error <- rev_dat %>% 
    filter(errors == 0)

rev_error <- rev_dat %>% 
    filter(errors <= 1)

rev_errorless_table <- rev_error %>% 
    pull(animal) %>% 
    table()

rev_best_mouse <- rev_errorless_table %>% 
    which.max() %>% 
    attr("names")

rev_best_geno <- geno$geno[geno$mouse == rev_best_mouse]

rev_errorless_dat <- rev_dat %>% 
    mutate(errorless = errors <= 1)

rev_errorless_dat %>% 
    filter(errorless) %>% 
    group_by(geno, op_n) %>% 
    count() %>%
    ungroup() %>% 
    complete(geno = levels(dat$geno),
             op_n = 1:18,
             fill = list(n = 0)) %>% 
    ggplot(aes(x = op_n,
               y = n,
               colour = geno)) +
    geom_point(position = position_dodge(width = .33)) +
    theme_classic() +
    labs(x = "Odour pair",
         y = "Number of mice with 0 or 1 errors")  +
    theme(legend.title = element_blank(),
          legend.position = c(.1, .9))
```

```{r}
rev_errorless_chi_op <- tabyl(rev_errorless_dat, op_n, errorless) %>%
    chisq.test()

rev_errorless_chi_geno <- tabyl(rev_errorless_dat, geno, errorless) %>%
    chisq.test()
```


```{r}
#| label: tbl-rev-errorless-models
#| tbl-cap: "AICc model table for near errorless learning during reversal"

# rev_errorless_mf <- glmer(errorless ~ geno + (1|animal),
#                            data = rev_errorless_dat,
#                            family = "binomial")
# 
# rev_errorless_model_table <- dredge(rev_errorless_mf)
# 
# rev_errorless_best_model <- get.models(rev_errorless_model_table,
#                                         subset = delta == 0)[[1]]
# 
# rev_errorless_null_model <- glmer(errorless ~ 1 + (1|animal),
#                                    data = rev_errorless_dat,
#                                    family = "binomial")
# 
# rev_errorless_aov <- anova(rev_errorless_best_model, 
#                             rev_errorless_null_model) %>% 
#     tidy()
# 
# attr(rev_errorless_model_table$weight, 'model.weights') <- NULL
# 
# rev_errorless_model_table %>% 
#     mutate(weight = round(weight, 2)) %>% 
#     select(-`(Intercept)`) %>% 
#     kable(digits = 2,
#           row.names = FALSE,
#           booktabs = TRUE,
#           linesep = "")

```

```{r}
# rev_second_half <- rev_dat %>% 
#     filter(op >= 10) %>% 
#     group_by(geno) %>% 
#     summarise(errors_mean = mean(errors),
#               errors_sd = sd(errors))
# 
# rev_second_half_t_test <- rev_dat %>%
#     filter(op >= 10) %>%
#     ungroup() %>%
#     t_test(errors ~ geno)
```

There were `r rev_1_error %>% nrow()` instances of mice making a single error on the reversal of the odour pair, and `r rev_0_error %>% nrow()` instances of a mouse making zero errors (@fig-rev-errorless). 
With `r rev_errorless_table %>% length()` mice passing at least one reversal with just one or zero errors.
One mouse, the same `r rev_best_geno` mentioned in the discrimination, had one or fewer errors on the reversal of `r rev_errorless_table %>% max()` odour pairs.

Pearson's $\chi^2$ tests with Yate's continuity corrections were run on the number of mice showing errorsless learning. 
The $\chi^2$ on the effect of odour pair was significant ($\chi^2$~`r format(rev_errorless_chi_op$parameter, digits = 2)`~ = `r format(rev_errorless_chi_op$statistic, digits = 2)`, *p* `r format.p(rev_errorless_chi_op$p.value)`),
while the $\chi^2$ on the effect of genotype was not ($\chi^2$~`r format(rev_errorless_chi_geno$parameter, digits = 2)`~ = `r format(rev_errorless_chi_geno$statistic, digits = 2)`, *p* `r format.p(rev_errorless_chi_geno$p.value)`).

## Age effects

```{r}
#| label: fig-rev-corr
#| fig-cap: "Correlation between age and errors made on odour pair one reversal."

rev_corr_test <- rev_dat %>% 
    filter(op == 1) %>% 
    group_by(geno) %>% 
    cor_test(errors, days)

rev_dat %>% 
    filter(op == 1) %>%
    ggplot(aes(x = days,
               y = errors,
               colour = geno)) +
    geom_point() +
    geom_smooth(method = "lm") + 
    theme_classic() +
    theme(legend.title = element_blank()) +
    labs(x = "Age (days)",
         y = "Errors")
```

Pearson's correlations were used to compare the number of errors made on odour pair one to the age of the mice for each genotype (@fig-disc-corr). 
The correlations were not significant for either the B6129 (*r* = `r format(rev_corr_test$cor[2], digits = 2)`, *p* `r format.p(rev_corr_test$p[2])`), 
nor the 3xTg-AD (*r* = `r format(rev_corr_test$cor[1], digits = 2)`, *p* `r format.p(rev_corr_test$p[1])`) mice.
{{< pagebreak >}}
# Total errors

```{r}
#| label: tbl-total-errors-models
#| tbl-cap: "AICc model table for total errors."
#### Total errors ---------------------------------------------------

total_errors_dat <- dat %>% 
    filter(retest == FALSE,
           op_n > 0) %>% 
    group_by(animal, geno, days) %>% 
    summarise(total_errors = sum(errors))

total_errors_aov <- total_errors_dat %>% 
    ungroup() %>% 
    anova_test(total_errors ~ geno)

# total_errors_fm <- lm(total_errors ~ geno,
#                       data = total_errors_dat)
# 
# total_errors_model_table <- dredge(total_errors_fm)
# 
# total_errors_best_model <- get.models(total_errors_model_table,
#                                       delta == 0)[[1]]
# 
# total_errors_null_model <- lm(total_errors ~ 1,
#                               data = total_errors_dat)
# 
# total_errors_aov <- anova(total_errors_null_model,
#                           total_errors_best_model) %>% 
#     tidy()
# 
# attr(total_errors_model_table$weight, 'model.weights') <- NULL
# 
# total_errors_model_table %>% 
#     mutate(weight = round(weight, 2)) %>% 
#     select(-`(Intercept)`) %>% 
#     kable(digits = 2,
#           row.names = FALSE,
#           booktabs = TRUE,
#           linesep = "")

```

An ANOVA was used to assess the total errors made during the discrimination and reversal trials.
There was a significant effect of genotype (*F*~(`r format(total_errors_aov$DFn, digits = 2)`,`r format(total_errors_aov$DFd, digits = 2)`)~ = `r format(total_errors_aov$F, digits = 2)`, *p* `r format.p(total_errors_aov$p, digits = 2)`, $\eta^2_G$ = `r format(total_errors_aov$ges, digits = 2)`; @fig-total-errors).

```{r}
#| label: fig-total-errors
#| fig-cap: "Total errors made, excluding retest."

total_errors_dat %>% 
    ggplot(aes(x = geno,
               y = total_errors,
               fill = geno)) +
    geom_boxplot(outlier.shape = NA) +
    geom_dotplot(binaxis = "y", 
               stackdir = "center",
               fill = NA) +
    theme_classic() +
    theme(legend.position = "none") +
    labs(y = "Total errors",
         x = "Genotype")

```

## Age effects

```{r}
#| label: fig-total-errors-corr
#| fig-cap: "Correlation between age and total errors made."

total_errors_corr_test <- total_errors_dat %>% 
    group_by(geno) %>% 
    cor_test(total_errors, days)

total_errors_dat %>% 
    ggplot(aes(x = days,
               y = total_errors,
               colour = geno)) +
    geom_point() +
    geom_smooth(method = "lm") + 
    theme_classic() +
    theme(legend.title = element_blank()) +
    labs(x = "Age (days)",
         y = "Total errors")

```

Pearson correlations were used to compare the total number of errors made to the age of the mice for each genotype (@fig-total-errors-corr). 
The correlations were not significant for either the B6129 (*r* = `r format(total_errors_corr_test$cor[2], digits = 2)`, *p* `r format.p(total_errors_corr_test$p[2])`), 
nor the 3xTg-AD (*r* = `r format(total_errors_corr_test$cor[1], digits = 2)`, *p* `r format.p(total_errors_corr_test$p[1])`) mice.
{{< pagebreak >}}
# Retest

```{r}
retest_dat <- dat %>% 
    filter(retest == TRUE)

retest_date_t_test <- geno %>% 
    filter(mouse %in% retest_dat$animal) %>%
    t_test(retest_days ~ geno)

retest_summary <- geno %>% 
    filter(mouse %in% retest_dat$animal) %>%
    group_by(geno) %>% 
    summarise(days_mean = mean(retest_days, na.rm = TRUE),
            days_sd = sd(retest_days, na.rm = TRUE))

retest_table <- retest_dat %>% 
    group_by(geno) %>% 
    count()
```

Due to mice dying, only `r retest_table$n[2]` `r retest_table$geno[2]` and `r retest_table$n[1]` `r retest_table$geno[1]` mice were given the retest.

The retest occurred between `r format(min(retest_dat$retest_days), digits = 2)` and `r format(max(retest_dat$retest_days), digits = 2)` days after the final reversal. There was no difference between between the days until the retest for the B6129 (`r format(retest_summary$days_mean[2], digits = 2)` ± `r format(retest_summary$days_sd[2], digits = 2)`) and 3xTg-AD (`r format(retest_summary$days_mean[1], digits = 2)` ± `r format(retest_summary$days_sd[1], digits = 2)`; *t*~`r format(retest_date_t_test$df, digits = 2)`~ = `r format(retest_date_t_test$statistic, digits = 2)`, *p* `r format.p(retest_date_t_test$p)`).

```{r}
retest_aov <- retest_dat %>% 
    ungroup() %>% 
    anova_test(errors ~ geno)
```

An ANOVA was used to assess the number of errors made during the retest. 
There was no significant effect of genotype ((*F*~(`r format(retest_aov$DFn, digits = 2)`,`r format(retest_aov$DFd, digits = 2)`)~ = `r format(retest_aov$F, digits = 2)`, *p* `r format.p(retest_aov$p, digits = 2)`, $\eta^2_G$ = `r format(retest_aov$ges, digits = 2)`; @fig-retest-errors)

```{r}
#| label: tbl-retest-errors-models
#| tbl-cap: "AICc model table for retest errors."
#### Retest ---------------------------------------------------------

# retest_mf <- lm(errors ~ geno,
#                 data = retest_dat)
# 
# retest_model_table <- dredge(retest_mf)
# 
# attr(retest_model_table$weight, 'model.weights') <- NULL
# 
# retest_model_table %>% 
#     mutate(weight = round(weight, 2)) %>% 
#     select(-`(Intercept)`) %>% 
#     kable(digits = 2,
#           row.names = FALSE,
#           booktabs = TRUE,
#           linesep = "")

```

<!-- The number of errors made during the retest was assessed with linear maodels.  -->
<!-- The null model best explained the data for the number of errors made during the retest (@tbl-retest-errors-models),  -->
<!-- indicating no significant effects of genotype nor sex (@fig-retest-errors). -->

```{r}
retest_vs_18_t_test <- retest_dat %>% 
    left_join(disc_dat %>% 
                  filter(op == 18) %>% 
                  select(animal, 
                         errors_18 = errors)) %>% 
    pivot_longer(cols = c(errors, errors_18),
                 names_to = "test",
                 values_to = "errors") %>% 
    # group_by(geno) %>% 
    t_test(errors ~ test,
           paired = TRUE)

retest_vs_18_summary <- retest_dat %>% 
    left_join(disc_dat %>% 
                  filter(op == 18) %>% 
                  select(animal, 
                         errors_18 = errors)) %>% 
    pivot_longer(cols = c(errors, errors_18),
                 names_to = "test",
                 values_to = "errors") %>%
    group_by(test) %>% 
    summarise(errors_mean = mean(errors),
              errors_sd = sd(errors))
```

A paired t-test was used to compare the number of errors made duringthe retest to the numbers of errors made on the final odour discrimination. 
The mean number of errors made during the retest (`r format(retest_vs_18_summary$errors_mean[1], digits = 2)` ± `r format(retest_vs_18_summary$errors_sd[1], digits = 2)`) was significantly higher than the errors made on the final odour discrimination (`r format(retest_vs_18_summary$errors_mean[2], digits = 2)` ± `r format(retest_vs_18_summary$errors_sd[2], digits = 2)`; *t*~`r format(retest_vs_18_t_test$df, digits = 2)`~ = `r format(retest_vs_18_t_test$statistic, digits = 2)`, *p* `r format.p(retest_vs_18_t_test$p)`).

```{r}
#| label: fig-retest-errors
#| fig-cap: "Total errors made during retest."

retest_dat %>% 
    ggplot(aes(x = geno,
               y = errors,
               fill = geno)) +
    geom_boxplot(outlier.shape = NA) +
    geom_dotplot(binaxis = "y", 
               stackdir = "center",
               fill = NA) +
    theme_classic() +
    theme(legend.position = "none") +
    labs(y = "Errors",
         x = "Genotype")

```

## Age effects

```{r}
#| label: fig-retest-corr
#| fig-cap: "Correlation between age and errors made on the retest."

retest_corr_test <- retest_dat %>% 
    group_by(geno) %>% 
    cor_test(errors, days)

retest_dat %>% 
    ggplot(aes(x = days,
               y = errors,
               colour = geno)) +
    geom_point() +
    geom_smooth(method = "lm") + 
    theme_classic() +
    theme(legend.title = element_blank()) +
    labs(x = "Age (days)",
         y = "Total errors")

```

Pearson correlations were used to compare the number of errors made on the retest to the age of the mice for each genotype (@fig-retest-corr). 
The correlations was not significant for the B6129 (*r* = `r format(retest_corr_test$cor[2], digits = 2)`, *p* `r format.p(retest_corr_test$p[2])`), 
but was for the 3xTg-AD (*r* = `r format(retest_corr_test$cor[1], digits = 2)`, *p* `r format.p(retest_corr_test$p[1])`) mice.

## Time from last test effect

```{r}
#| label: fig-retest-delay-corr
#| fig-cap: "Correlation between days after last reversal and errors made on the retest."

retest_days_corr_test <- retest_dat %>% 
    group_by(geno) %>%
    cor_test(errors, retest_days)

retest_dat %>% 
    ggplot(aes(x = retest_days,
               y = errors,
               colour = geno)) +
    geom_point() +
    geom_smooth(method = "lm") + 
    theme_classic() +
    theme(legend.title = element_blank()) +
    labs(x = "Days since last reversal",
         y = "Total errors")
```

Pearson correlations were used to compare the number of errors made on the retest to the days since the final reversal (@fig-retest-delay-corr). 
There was a significant, positive correlation for the B6129 mice (*r* = `r format(retest_days_corr_test$cor[2], digits = 2)`, *p* `r format.p(retest_days_corr_test$p[2])`), 
but not for the 3xTg-AD mice (*r* = `r format(retest_days_corr_test$cor[1], digits = 2)`, *p* `r format.p(retest_days_corr_test$p[1])`).