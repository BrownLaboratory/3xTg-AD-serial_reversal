---
# title: "3xTg-AD-serial-reversal"
execute:
  echo: false
  warning: false
format:
    pdf:
        include-in-header: 
            text: |
                \usepackage{fancyhdr}
                \setmainfont{Times New Roman}
        include-before-body:
            text: |
                \pagestyle{fancy}
                \fancyhead[L]{Serial Reversal in 3xTg-AD Mice}
                \fancyhead[R]{\today}
                \fancyfoot[C]{\thepage}
---

```{r}
#### Load libraries ----------------------------------------------------
library(here)
library(janitor)
library(rstatix)
library(tidyverse)
library(MuMIn)
    options(na.action = "na.fail")
library(lme4)
library(knitr)
    options(knitr.kable.NA = '')
library(kableExtra)
    
source(here("code", "format_p_values.R"))

#### Read and wrangle data ---------------------------------------------

# Genotypes data

geno <- read_csv(here("data", "geno clean.csv"),
                 col_types = "cffDDdd") %>% 
    mutate(sex = case_when(
            sex == "f" ~ "Female",
            sex == "m" ~ "Male"),
        sex = as.factor(sex),
        geno = case_when(
            geno == "tg" ~ "3xTg-AD",
            geno == "wt" ~ "B6129"),
        geno = as.factor(geno)) %>% 
    clean_names()

# Manual data

manual_files <- list.files(here("data", "csvs"),
                           pattern = "\\.csv",
                           full.names = TRUE)

manual_data <- manual_files %>% 
    map_dfr(read_csv,
            col_types = "cccdddddl") %>% 
    clean_names() %>% 
    filter(!exclude) %>% 
    mutate(rev = rev == "yes",
           retest = str_to_lower(op) == "retest") %>% 
    rename(animal = mouse) %>% 
    select(-exclude)

# Auto data

auto_files <- list.files(here("data", "auto"),
                         pattern = "\\.csv",
                         full.names = TRUE)

auto_data <- auto_files %>% 
    map_dfr(read_csv,
            col_types = "ccddccdddddccdddddccldlld",
            comment = "#") %>% 
    clean_names() %>% 
    mutate(animal = case_when(
            animal == "1297" ~ "1927",
            TRUE ~ animal),
           op = str_extract(study_name,
                            "[:digit:]+"),
           rev = str_detect(study_name,
                            "REV"),
           retest = str_detect(study_name,
                               "RETEST")) %>% 
    group_by(animal, date, study_name, block, op, rev, retest) %>% 
    summarise(hit = sum(correct[trial_type == "P"], na.rm = TRUE),
              p_trials = sum(trial_type[!ss] == "P"),
              cr = sum(correct[trial_type == "N"], na.rm = TRUE),
              n_trials = sum(trial_type[!ss] == "N")) %>% 
    ungroup() %>% 
    select(-date, -study_name)

# Combine manual and auto data, summarize and add genotypes

dat <- bind_rows(manual_data, auto_data) %>% 
    group_by(animal, op, rev, retest) %>% 
    summarise(across(hit:n_trials,
                     ~ sum(.x))) %>% 
    mutate(errors = (p_trials + n_trials) - (hit + cr),
           op = case_when(
               op %in% 0:18 ~ as.numeric(op)
           ),
           rev = as.factor(rev),
           retest = as.factor(retest)) %>% 
    left_join(geno,
              by = c("animal" = "mouse")) %>% 
    ungroup()

```

```{r}
#### Check for incomplete data ------------------------------------
incomplete_mice <- dat %>% 
    group_by(animal, rev, retest) %>% 
    summarise(max_op = max(op),
              min_op = min(op)) %>% 
    filter(max_op != 18, retest == FALSE) %>% 
    pull(animal) %>% 
    unique()

# Drop mice with incomplete data
dat <- dat %>% 
    filter(!(animal %in% incomplete_mice))
```

# Subjects

```{r}
#| label: tbl-subjects
#| tbl-cap: "Demographics of mice tested."

#### Demographics ---------------------------------------------
geno %>% 
    filter(!(mouse %in% incomplete_mice)) %>% 
    group_by(geno, sex) %>% 
    summarise(mean_age = mean(days),
              min_age = min(days),
              max_age = max(days),
              n = length(days)) %>% 
    kbl(format = "latex",
        col.names = c("Genotype", "Sex", "Mean age (days)",
                        "Minimum age (days)", "Maximum age (days)", "N"),
        digits = 2,
        booktabs = TRUE,
        linesep = "")

t_test_age <- geno %>% 
    filter(!(mouse %in% incomplete_mice)) %>%
    ungroup() %>% 
    t_test(days ~ geno)

```

There are `r dat %>% pull(animal) %>% unique() %>% length()` mice included in this study. There was no significant difference in age between the 3xTg-AD and B6129 mice (*t*~`r format(t_test_age$df, digits = 2)`~ = `r format(t_test_age$statistic, digits = 2)`, *p* `r format.p(t_test_age$p)`; @tbl-subjects).

# Discrimination

```{r}
#| label: fig-disc
#| fig-cap: "Errors (±95% CI) made by the mice at on each odour pair during the discrimination stages."

disc_dat <- dat %>% 
    filter(retest == FALSE, 
           rev == FALSE)

disc_dat %>% 
    ggplot(aes(x = op,
               y = errors,
               colour = geno)) +
    geom_point(alpha = .2,
               shape = 20) + 
    stat_summary(fun.data = "mean_cl_boot") +
    geom_smooth(se = FALSE) +
    theme_classic() +
    theme(legend.title = element_blank(),
          legend.position = c(.9, .9)) +
    labs(x = "Odour pair",
         y = "Errors")
    
```

```{r}
#| label: tbl-disc-models
#| tbl-cap: "AICc model table for discrimination."

#### Tests -------------------------------------------------------

# Discrimination

disc_fm <- lmer(errors ~ op * sex * geno + (1|animal),
                data = disc_dat,
                REML = FALSE)

disc_model_table <- dredge(disc_fm,
       fixed = "op")

disc_best_model <- get.models(disc_model_table,
                              subset = delta == 0)[[1]]

disc_null_model <- lmer(errors ~ op + (1|animal),
                        data = disc_dat,
                        REML = FALSE)

disc_aov <- anova(disc_best_model, disc_null_model) %>% tidy()

attr(disc_model_table$weight, 'model.weights') <- NULL

disc_model_table %>% 
    mutate(weight = round(weight, 2)) %>% 
    select(-`(Intercept)`) %>% 
    kable(digits = 2,
          row.names = FALSE,
          booktabs = TRUE,
          linesep = "") %>% 
    kable_styling(latex_options = c("scale_down"))
```

The errors made decreased as the mice advanced through the odour pairs (@fig-disc). The model with effects of genotype, odour pair, and the genotype by odour pair interaction best explained the data (@tbl-disc-models), this model did not differ from the null model of just an effect of odour pair ($\chi$^2^~`r format(disc_aov$df[2], digits = 2)`~ = `r format(disc_aov$statistic[2], digits = 2)`, *p* `r format.p(disc_aov$p.value[2])`).

# Reversal

```{r}
#| label: fig-rev
#| fig-cap: "Errors (±95% CI) made by the mice at on each odour pair during the reversal stages."

rev_dat <- dat %>% 
    filter(retest == FALSE, 
           rev == TRUE)

rev_dat %>% 
    ggplot(aes(x = op,
               y = errors,
               colour = geno)) +
    geom_point(alpha = .2,
               shape = 20) + 
    stat_summary(fun.data = "mean_cl_boot") +
    geom_smooth(se = FALSE) +
    theme_classic() +
    theme(legend.title = element_blank(),
          legend.position = c(.9, .9)) +
    labs(x = "Odour pair",
         y = "Errors")
```


```{r}
#| label: tbl-rev-models
#| tbl-cap: "AICc model table for reversal."

# Reversal
rev_fm <- lmer(errors ~ op * sex * geno + (1|animal),
               data = rev_dat,
               REML = FALSE)

rev_model_table <- dredge(rev_fm,
       fixed = "op")

rev_best_model <- get.models(rev_model_table,
                             subset = delta == 0)[[1]]

rev_null_model <- lmer(errors ~ op + (1|animal),
                       data = rev_dat,
                       REML = FALSE)

rev_aov <- anova(rev_best_model, rev_null_model) %>% tidy()

attr(rev_model_table$weight, 'model.weights') <- NULL

rev_model_table %>% 
    mutate(weight = round(weight, 2)) %>% 
    select(-`(Intercept)`) %>% 
    kable(digits = 2,
          row.names = FALSE,
          booktabs = TRUE,
          linesep = "") %>% 
    kable_styling(latex_options = c("scale_down"))
```


The errors made decreased as the mice advanced through the odour pairs (@fig-rev). The model with effects of genotype, odour pair, and the genotype by odour pair interaction best explained the data (@tbl-rev-models), this model differed significantly from the null model of just an effect of odour pair ($\chi$^2^~`r format(rev_aov$df[2], digits = 2)`~ = `r format(rev_aov$statistic[2], digits = 2)`, *p* `r format.p(rev_aov$p.value[2])`).

# Total errors

```{r}
#| label: tbl-total-errors-models
#| tbl-cap: "AICc model table for total errors."
#### Total errors ---------------------------------------------------

total_errors_dat <- dat %>% 
    filter(retest == FALSE) %>% 
    group_by(animal, sex, geno) %>% 
    summarise(total_errors = sum(errors))

total_errors_fm <- lm(total_errors ~ geno * sex,
                      data = total_errors_dat)

total_errors_model_table <- dredge(total_errors_fm)

total_errors_best_model <- get.models(total_errors_model_table,
                                      delta == 0)[[1]]

total_errors_null_model <- lm(total_errors ~ 1,
                              data = total_errors_dat)

total_errors_aov <- anova(total_errors_null_model,
                          total_errors_best_model) %>% 
    tidy()

attr(total_errors_model_table$weight, 'model.weights') <- NULL

total_errors_model_table %>% 
    mutate(weight = round(weight, 2)) %>% 
    select(-`(Intercept)`) %>% 
    kable(digits = 2,
          row.names = FALSE,
          booktabs = TRUE,
          linesep = "") %>% 
    kable_styling(latex_options = c("scale_down"))

```

The model with just an effect of genotype best explained the data (@tbl-total-errors-models), this model differed significantly from the null model (*F*~`r format(total_errors_aov$df[2], digits = 2)`~ = `r format(total_errors_aov$statistic[2], digits = 2)`, *p* `r format.p(total_errors_aov$p.value[2])`; (@fig-total-errors)).

```{r}
#| label: fig-total-errors
#| fig-cap: "Total errors made, excluding retest."

total_errors_dat %>% 
    ggplot(aes(x = geno,
               y = total_errors)) +
    geom_boxplot(outlier.shape = NA) +
    geom_dotplot(binaxis = "y", 
               stackdir = "center",
               fill = NA) +
    theme_classic() +
    labs(y = "Total errors",
         x = "Genotype")

```

# Retest

```{r}
#### Retest ---------------------------------------------------------

```

