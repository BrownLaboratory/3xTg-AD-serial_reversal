---
# title: "3xTg-AD-serial-reversal"
execute:
  echo: false
  warning: false
format:
    pdf:
        include-in-header: 
            text: |
                \usepackage{fancyhdr}
                \setmainfont{Times New Roman}
        include-before-body:
            text: |
                \pagestyle{fancy}
                \fancyhead[L]{Serial Reversal in 3xTg-AD Mice}
                \fancyhead[R]{\today}
                \fancyfoot[C]{\thepage}
---

```{r}
#### Load libraries ----------------------------------------------------
library(here)
library(janitor)
library(rstatix)
library(tidyverse)
library(MuMIn)
    options(na.action = "na.fail")
library(lme4)
library(knitr)
    options(knitr.kable.NA = '')
library(kableExtra)
    
source(here("code", "format_p_values.R"))

#### Read and wrangle data ---------------------------------------------

# Genotypes data

geno <- read_csv(here("data", "geno clean.csv"),
                 col_types = "cffDDdd") %>% 
    mutate(sex = case_when(
            sex == "f" ~ "Female",
            sex == "m" ~ "Male"),
        sex = as.factor(sex),
        geno = case_when(
            geno == "tg" ~ "3xTg-AD",
            geno == "wt" ~ "B6129"),
        geno = as.factor(geno)) %>% 
    clean_names()

# Manual data

manual_files <- list.files(here("data", "csvs"),
                           pattern = "\\.csv",
                           full.names = TRUE)

manual_data <- manual_files %>% 
    map_dfr(read_csv,
            col_types = "cccdddddl") %>% 
    clean_names() %>% 
    filter(!exclude) %>% 
    mutate(rev = rev == "yes",
           retest = str_to_lower(op) == "retest") %>% 
    rename(animal = mouse) %>% 
    select(-exclude)

# Auto data

auto_files <- list.files(here("data", "auto"),
                         pattern = "\\.csv",
                         full.names = TRUE)

auto_data <- auto_files %>% 
    map_dfr(read_csv,
            col_types = "ccddccdddddccdddddccldlld",
            comment = "#") %>% 
    clean_names() %>% 
    mutate(animal = case_when(
            animal == "1297" ~ "1927",
            TRUE ~ animal),
           op = str_extract(study_name,
                            "[:digit:]+"),
           rev = str_detect(study_name,
                            "REV"),
           retest = str_detect(study_name,
                               "RETEST")) %>% 
    group_by(animal, date, study_name, block, op, rev, retest) %>% 
    summarise(hit = sum(correct[trial_type == "P"], na.rm = TRUE),
              p_trials = sum(trial_type[!ss] == "P"),
              cr = sum(correct[trial_type == "N"], na.rm = TRUE),
              n_trials = sum(trial_type[!ss] == "N")) %>% 
    ungroup() %>% 
    select(-date, -study_name)

# Combine manual and auto data, summarize and add genotypes

dat <- bind_rows(manual_data, auto_data) %>% 
    group_by(animal, op, rev, retest) %>% 
    summarise(across(hit:n_trials,
                     ~ sum(.x))) %>% 
    mutate(errors = (p_trials + n_trials) - (hit + cr),
           op = case_when(
               op %in% 0:18 ~ as.numeric(op)
           ),
           rev = as.factor(rev),
           retest = as.factor(retest)) %>% 
    left_join(geno,
              by = c("animal" = "mouse")) %>% 
    ungroup()

```

```{r}
#### Check for incomplete data ------------------------------------
incomplete_mice <- dat %>% 
    group_by(animal, rev, retest) %>% 
    summarise(max_op = max(op),
              min_op = min(op)) %>% 
    filter(max_op != 18, retest == FALSE) %>% 
    pull(animal) %>% 
    unique()

# Drop mice with incomplete data and male mice
dat <- dat %>% 
    filter(!(animal %in% incomplete_mice),
           sex == "Female")
```

# Subjects

```{r}
#| label: tbl-subjects
#| tbl-cap: "Demographics of mice tested."

#### Demographics ---------------------------------------------
geno %>% 
    filter(!(mouse %in% incomplete_mice)) %>% 
    group_by(geno, sex) %>% 
    summarise(mean_age = mean(days),
              min_age = min(days),
              max_age = max(days),
              n = length(days)) %>% 
    kbl(format = "latex",
        col.names = c("Genotype", "Sex", "Mean age (days)",
                        "Minimum age (days)", "Maximum age (days)", "N"),
        digits = 2,
        booktabs = TRUE,
        linesep = "")

t_test_age <- geno %>% 
    filter(!(mouse %in% incomplete_mice),
           sex == "Female") %>%
    ungroup() %>% 
    t_test(days ~ geno)

```

Due to the small number of male mice, only females are included in this analysis.
There are `r dat %>% pull(animal) %>% unique() %>% length()` female mice included in this study. 
There was no significant difference in age between the 3xTg-AD and B6129 mice (*t*~`r format(t_test_age$df, digits = 2)`~ = `r format(t_test_age$statistic, digits = 2)`, *p* `r format.p(t_test_age$p)`; @tbl-subjects).

# Discrimination

```{r}
#| label: fig-disc
#| fig-cap: "Errors (Â±95% CI) made by the mice at on each odour pair during the discrimination stages."

disc_dat <- dat %>% 
    filter(retest == FALSE, 
           rev == FALSE)

disc_dat %>% 
    ggplot(aes(x = op,
               y = errors,
               colour = geno)) +
    geom_point(alpha = .2,
               shape = 20) + 
    stat_summary(fun.data = "mean_cl_boot") +
    geom_smooth(se = FALSE) +
    theme_classic() +
    theme(legend.title = element_blank(),
          legend.position = c(.9, .9)) +
    labs(x = "Odour pair",
         y = "Errors")
    
```

```{r}
#| label: tbl-disc-models
#| tbl-cap: "AICc model table for discrimination."

#### Tests -------------------------------------------------------

# Discrimination

disc_fm <- lmer(errors ~ op * geno + (1|animal),
                data = disc_dat,
                REML = FALSE)

disc_model_table <- dredge(disc_fm)

disc_best_model <- get.models(disc_model_table,
                              subset = delta == 0)[[1]]

disc_null_model <- lmer(errors ~ (1|animal),
                        data = disc_dat,
                        REML = FALSE)

disc_aov <- anova(disc_best_model, disc_null_model) %>% tidy()

attr(disc_model_table$weight, 'model.weights') <- NULL

disc_model_table %>% 
    mutate(weight = round(weight, 2)) %>% 
    select(-`(Intercept)`) %>% 
    kable(digits = 2,
          row.names = FALSE,
          booktabs = TRUE,
          linesep = "")
    # kable_styling(latex_options = c("scale_down"))
```

The discrimination trials were assessed with linear mixed effects models on the number of errors made on each odour pair. 
The errors made decreased as the mice advanced through the odour pairs (@fig-disc). 
The  model with just an effect of odour pair best explained the data (@tbl-disc-models), 
this model differed from the null model ($\chi$^2^~`r format(disc_aov$df[2], digits = 2)`~ = `r format(disc_aov$statistic[2], digits = 2)`, *p* `r format.p(disc_aov$p.value[2])`).

## Near errorless learning

```{r}
#| label: tbl-disc-errorless-models
#| tbl-cap: "AICc model table for near errorless learning during discrimination."

disc_1_error <- disc_dat %>% 
    filter(errors == 1)

disc_0_error <- disc_dat %>% 
    filter(errors == 0)

disc_error <- disc_dat %>% 
    filter(errors <= 1)

disc_errorless_table <- disc_error %>% 
    pull(animal) %>% 
    table()

disc_best_mouse <- disc_errorless_table %>% 
    which.max() %>% 
    attr("names")

disc_best_geno <- geno$geno[geno$mouse == disc_best_mouse]

disc_errorless_dat <- disc_dat %>% 
    mutate(errorless = errors <= 1)

disc_errorless_mf <- glmer(errorless ~ geno + (1|animal),
                           data = disc_errorless_dat,
                           family = "binomial")

disc_errorless_model_table <- dredge(disc_errorless_mf)

disc_errorless_best_model <- get.models(disc_errorless_model_table,
                                        subset = delta == 0)[[1]]

disc_errorless_null_model <- glmer(errorless ~ 1 + (1|animal),
                                   data = disc_errorless_dat,
                                   family = "binomial")

disc_errorless_aov <- anova(disc_errorless_best_model, 
                            disc_errorless_null_model) %>% 
    tidy()

attr(disc_errorless_model_table$weight, 'model.weights') <- NULL

disc_errorless_model_table %>% 
    mutate(weight = round(weight, 2)) %>% 
    select(-`(Intercept)`) %>% 
    kable(digits = 2,
          row.names = FALSE,
          booktabs = TRUE,
          linesep = "")

```

There were `r disc_1_error %>% nrow()` instances of mice making a single error on the initial discrimination of the odour pair, and `r disc_0_error %>% nrow()` instance of a mouse making zero errors. 
With `r disc_errorless_table %>% length()` mice passing at least one discrimination with just one or zero errors.
One mouse, a `r disc_best_geno`, had one or fewer errors on the initial discrimination of `r disc_errorless_table %>% max()` odour pairs.

Generalized linear mixed effects models were used to examine the proportion of mice making one or zero errors on each odour pair. 
The model with an effect of genotype best explained the data (@tbl-disc-errorless-models), but did not differ from the null model ($\chi$^2^~`r format(disc_errorless_aov$df[2], digits = 2)`~ = `r format(disc_errorless_aov$statistic[2], digits = 2)`, *p* `r format.p(disc_errorless_aov$p.value[2])`).

## Age effects

```{r}
#| label: fig-disc-corr
#| fig-cap: "Correlation between age and errors made on odour pair one discrimination."

disc_corr_test <- disc_dat %>% 
    filter(op == 1) %>% 
    group_by(geno) %>% 
    cor_test(errors, days)

disc_dat %>% 
    filter(op == 1) %>% 
    ggplot(aes(x = days,
               y = errors,
               colour = geno)) +
    geom_point() +
    geom_smooth(method = "lm") + 
    theme_classic() +
    theme(legend.title = element_blank()) +
    labs(x = "Age (days)",
         y = "Errors")
```

Pearson correlations were used to compare the number of errors made on odour pair one to the age of the mice for each genotype (@fig-disc-corr). 
The correlations were not significant for either the B6129 (*r* = `r format(disc_corr_test$cor[2], digits = 2)`, *p* = `r format.p(disc_corr_test$p[2])`), 
nor the 3xTg-AD (*r* = `r format(disc_corr_test$cor[1], digits = 2)`, *p* = `r format.p(disc_corr_test$p[1])`) mice.
{{< pagebreak >}}
# Reversal

```{r}
#| label: fig-rev
#| fig-cap: "Errors (Â±95% CI) made by the mice at on each odour pair during the reversal stages."

rev_dat <- dat %>% 
    filter(retest == FALSE, 
           rev == TRUE)

rev_dat %>% 
    ggplot(aes(x = op,
               y = errors,
               colour = geno)) +
    geom_point(alpha = .2,
               shape = 20) + 
    stat_summary(fun.data = "mean_cl_boot") +
    geom_smooth(se = FALSE) +
    theme_classic() +
    theme(legend.title = element_blank(),
          legend.position = c(.9, .9)) +
    labs(x = "Odour pair",
         y = "Errors")
```


```{r}
#| label: tbl-rev-models
#| tbl-cap: "AICc model table for reversal."

# Reversal
rev_fm <- lmer(errors ~ op * geno + (1|animal),
               data = rev_dat,
               REML = FALSE)

rev_model_table <- dredge(rev_fm)

rev_best_model <- get.models(rev_model_table,
                             subset = delta == 0)[[1]]

rev_null_model <- lmer(errors ~ (1|animal),
                       data = rev_dat,
                       REML = FALSE)

rev_aov <- anova(rev_best_model, rev_null_model) %>% tidy()

attr(rev_model_table$weight, 'model.weights') <- NULL

rev_model_table %>% 
    mutate(weight = round(weight, 2)) %>% 
    select(-`(Intercept)`) %>% 
    kable(digits = 2,
          row.names = FALSE,
          booktabs = TRUE,
          linesep = "") 
    # kable_styling(latex_options = c("scale_down"))
```

The reversal trials were assessed with linear mixed effects models on the number of errors made on each odour pair. 
The errors made decreased as the mice advanced through the odour pairs (@fig-rev). 
The model with effects of genotype, odour pair, and the genotype by odour pair interaction best explained the data (@tbl-rev-models), 
this model differed significantly from the null model of just an effect of odour pair ($\chi$^2^~`r format(rev_aov$df[2], digits = 2)`~ = `r format(rev_aov$statistic[2], digits = 2)`, *p* `r format.p(rev_aov$p.value[2])`).

## Near errorless learning

```{r}
#| label: tbl-rev-errorless-models
#| tbl-cap: "AICc model table for near errorless learning during reversal"

rev_1_error <- rev_dat %>% 
    filter(errors == 1)

rev_0_error <- rev_dat %>% 
    filter(errors == 0)

rev_error <- rev_dat %>% 
    filter(errors <= 1)

rev_errorless_table <- rev_error %>% 
    pull(animal) %>% 
    table()

rev_best_mouse <- rev_errorless_table %>% 
    which.max() %>% 
    attr("names")

rev_best_geno <- geno$geno[geno$mouse == rev_best_mouse]

rev_errorless_dat <- rev_dat %>% 
    mutate(errorless = errors <= 1)

rev_errorless_mf <- glmer(errorless ~ geno + (1|animal),
                           data = rev_errorless_dat,
                           family = "binomial")

rev_errorless_model_table <- dredge(rev_errorless_mf)

rev_errorless_best_model <- get.models(rev_errorless_model_table,
                                        subset = delta == 0)[[1]]

rev_errorless_null_model <- glmer(errorless ~ 1 + (1|animal),
                                   data = rev_errorless_dat,
                                   family = "binomial")

rev_errorless_aov <- anova(rev_errorless_best_model, 
                            rev_errorless_null_model) %>% 
    tidy()

attr(rev_errorless_model_table$weight, 'model.weights') <- NULL

rev_errorless_model_table %>% 
    mutate(weight = round(weight, 2)) %>% 
    select(-`(Intercept)`) %>% 
    kable(digits = 2,
          row.names = FALSE,
          booktabs = TRUE,
          linesep = "")

```

There were `r rev_1_error %>% nrow()` instances of mice making a single error on the reversal of the odour pair, and `r rev_0_error %>% nrow()` instances of a mouse making zero errors. 
With `r rev_errorless_table %>% length()` mice passing at least one reversal with just one or zero errors.
One mouse, the same `r rev_best_geno` mentioned in the discrimination, had one or fewer errors on the reversal of `r rev_errorless_table %>% max()` odour pairs.

Generalized linear mixed effects models were used to examine the proportion of mice making one or zero errors on each odour pair. 
The null model best explained the data (@tbl-rev-errorless-models).

## Age effects

```{r}
#| label: fig-rev-corr
#| fig-cap: "Correlation between age and errors made on odour pair one reversal."

rev_corr_test <- rev_dat %>% 
    filter(op == 1) %>% 
    group_by(geno) %>% 
    cor_test(errors, days)

rev_dat %>% 
    filter(op == 1) %>%
    ggplot(aes(x = days,
               y = errors,
               colour = geno)) +
    geom_point() +
    geom_smooth(method = "lm") + 
    theme_classic() +
    theme(legend.title = element_blank()) +
    labs(x = "Age (days)",
         y = "Errors")
```

Pearson correlations were used to compare the number of errors made on odour pair one to the age of the mice for each genotype (@fig-disc-corr). 
The correlations were not significant for either the B6129 (*r* = `r format(rev_corr_test$cor[2], digits = 2)`, *p* = `r format.p(rev_corr_test$p[2])`), 
nor the 3xTg-AD (*r* = `r format(rev_corr_test$cor[1], digits = 2)`, *p* `r format.p(rev_corr_test$p[1])`) mice.
{{< pagebreak >}}
# Total errors

```{r}
#| label: tbl-total-errors-models
#| tbl-cap: "AICc model table for total errors."
#### Total errors ---------------------------------------------------

total_errors_dat <- dat %>% 
    filter(retest == FALSE) %>% 
    group_by(animal, geno, days) %>% 
    summarise(total_errors = sum(errors))

total_errors_fm <- lm(total_errors ~ geno,
                      data = total_errors_dat)

total_errors_model_table <- dredge(total_errors_fm)

total_errors_best_model <- get.models(total_errors_model_table,
                                      delta == 0)[[1]]

total_errors_null_model <- lm(total_errors ~ 1,
                              data = total_errors_dat)

total_errors_aov <- anova(total_errors_null_model,
                          total_errors_best_model) %>% 
    tidy()

attr(total_errors_model_table$weight, 'model.weights') <- NULL

total_errors_model_table %>% 
    mutate(weight = round(weight, 2)) %>% 
    select(-`(Intercept)`) %>% 
    kable(digits = 2,
          row.names = FALSE,
          booktabs = TRUE,
          linesep = "")

```

The total errors made were assessed with linear models. 
The model with an effect of genotype best explained the data (@tbl-total-errors-models), 
this model differed significantly from the null model (*F*~`r format(total_errors_aov$df[2], digits = 2)`~ = `r format(total_errors_aov$statistic[2], digits = 2)`, *p* `r format.p(total_errors_aov$p.value[2])`; @fig-total-errors).

```{r}
#| label: fig-total-errors
#| fig-cap: "Total errors made, excluding retest."

total_errors_dat %>% 
    ggplot(aes(x = geno,
               y = total_errors)) +
    geom_boxplot(outlier.shape = NA) +
    geom_dotplot(binaxis = "y", 
               stackdir = "center",
               fill = NA) +
    theme_classic() +
    labs(y = "Total errors",
         x = "Genotype")

```

## Age effects

```{r}
#| label: fig-total-errors-corr
#| fig-cap: "Correlation between age and total errors made."

total_errors_corr_test <- total_errors_dat %>% 
    group_by(geno) %>% 
    cor_test(total_errors, days)

total_errors_dat %>% 
    ggplot(aes(x = days,
               y = total_errors,
               colour = geno)) +
    geom_point() +
    geom_smooth(method = "lm") + 
    theme_classic() +
    theme(legend.title = element_blank()) +
    labs(x = "Age (days)",
         y = "Total errors")

```

Pearson correlations were used to compare the total number of errors made to the age of the mice for each genotype (@fig-total-errors-corr). 
The correlations were not significant for either the B6129 (*r* = `r format(total_errors_corr_test$cor[2], digits = 2)`, *p* = `r format.p(total_errors_corr_test$p[2])`), 
nor the 3xTg-AD (*r* = `r format(total_errors_corr_test$cor[1], digits = 2)`, *p* `r format.p(total_errors_corr_test$p[1])`) mice.
{{< pagebreak >}}
# Retest

```{r}
retest_dat <- dat %>% 
    filter(retest == TRUE)

retest_table <- retest_dat %>% 
    group_by(geno) %>% 
    count()
```

Due to mice dying, only `r retest_table$n[2]` `r retest_table$geno[2]` and `r retest_table$n[1]` `r retest_table$geno[1]` mice were given the retest.

```{r}
#| label: tbl-retest-errors-models
#| tbl-cap: "AICc model table for retest errors."
#### Retest ---------------------------------------------------------

retest_mf <- lm(errors ~ geno,
                data = retest_dat)

retest_model_table <- dredge(retest_mf)

attr(retest_model_table$weight, 'model.weights') <- NULL

retest_model_table %>% 
    mutate(weight = round(weight, 2)) %>% 
    select(-`(Intercept)`) %>% 
    kable(digits = 2,
          row.names = FALSE,
          booktabs = TRUE,
          linesep = "")

```

The number of errors made during the retest was assessed with linear maodels. 
The null model best explained the data for the number of errors made during the retest (@tbl-retest-errors-models), 
indicating no significant effects of genotype nor sex (@fig-retest-errors).

```{r}
#| label: fig-retest-errors
#| fig-cap: "Total errors made during retest."

retest_dat %>% 
    ggplot(aes(x = geno,
               y = errors)) +
    geom_boxplot(outlier.shape = NA) +
    geom_dotplot(binaxis = "y", 
               stackdir = "center",
               fill = NA) +
    theme_classic() +
    labs(y = "Errors",
         x = "Genotype")

```

## Age effects

```{r}
#| label: fig-retest-corr
#| fig-cap: "Correlation between age and errors made on the retest."

retest_corr_test <- retest_dat %>% 
    group_by(geno) %>% 
    cor_test(errors, days)

retest_dat %>% 
    ggplot(aes(x = days,
               y = errors,
               colour = geno)) +
    geom_point() +
    geom_smooth(method = "lm") + 
    theme_classic() +
    theme(legend.title = element_blank()) +
    labs(x = "Age (days)",
         y = "Total errors")

```

Pearson correlations were used to compare the number of errors made on the retest to the age of the mice for each genotype (@fig-retest-corr). 
The correlations were not significant for either the B6129 (*r* = `r format(retest_corr_test$cor[2], digits = 2)`, *p* = `r format.p(retest_corr_test$p[2])`), 
nor the 3xTg-AD (*r* = `r format(retest_corr_test$cor[1], digits = 2)`, *p* = `r format.p(retest_corr_test$p[1])`) mice.
